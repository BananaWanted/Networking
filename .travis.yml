# all builds:
#   tag current commit with the CI build number in BUILD-<#> format
#   tag image with build number (BUILD-<#>) if build succeed
# PR builds:
#   build modified apps (by compare with master) / newly created apps (by trying to pull from "latest")
#   tag image with PR branch name, both existed apps & newly built apps
# master builds:
#   build all apps
#   tag with build number and "latest" and "master"

sudo: required
services:
  - docker
notifications:
  email:
    on_success: always
    on_failure: always
branches:
  only:
    - master
before_install:
  - make ci_git_set_username_travis
  - make ci_git_login
install:
  # define variables
  - APP_NAMES=$(make show_available_apps)
  - "CURRENT_BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}"
  - BUILD_TAG=BUILD-$TRAVIS_BUILD_NUMBER
  - BUILD_PENDING_APPS=()
  - REUSE_EXISTING_APPS=()
  # tag the commit
  - |
    git tag $BUILD_TAG
    git push origin $BUILD_TAG
  - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
  # pulling only happens on PR builds
  # prepare an array containing app names for building
  - |
    if [[ "$TRAVIS_PULL_REQUEST" = "false" ]]; then
      echo master build, going to build all apps...
      BUILD_PENDING_APPS=($APP_NAMES)
    else
      echo PR build, scanning new/modified apps...
      for app_name in $APP_NAMES; do
          if docker pull $DOCKER_HUB_USERNAME/$app_name; then
            APP_EXISTED=true
          else
            echo new app detected: $app_name
            APP_EXISTED=false
          fi
          # exit code 0 means no diff vs exit code 1 means there were diff
          if git diff --no-ext-diff --exit-code origin/master -- applications/$app_name; then
            APP_MODIFIED=false
          else
            echo modified app detected: $app_name
            APP_MODIFIED=true
          fi

          if ! $APP_EXISTED || $APP_MODIFIED; then
            BUILD_PENDING_APPS+=("$app_name")
          else
            REUSE_EXISTING_APPS+=("$app_name")
          fi
      done
    fi
  - echo building apps ${BUILD_PENDING_APPS[*]}
script:
  - |
    # build modified / new apps
    for app_name in ${BUILD_PENDING_APPS[@]}; do
      docker build --pull --no-cache -t $DOCKER_HUB_USERNAME/$app_name:$BUILD_TAG applications/$app_name
    done
  - |
    # re-tag exists apps
    for app_name in ${REUSE_EXISTING_APPS[@]}; do
      docker tag $DOCKER_HUB_USERNAME/$app_name $DOCKER_HUB_USERNAME/$app_name:$BUILD_TAG
    done

after_success:
  - |
    # push images
    for app_name in $APP_NAMES; do
      echo pushing $DOCKER_HUB_USERNAME/$app_name:$BUILD_TAG
      docker push $DOCKER_HUB_USERNAME/$app_name:$BUILD_TAG
      if [[ "$TRAVIS_PULL_REQUEST" = "false" ]]; then
        # override latest for master builds
        docker tag $DOCKER_HUB_USERNAME/$app_name:$BUILD_TAG $DOCKER_HUB_USERNAME/$app_name
        echo pushing $DOCKER_HUB_USERNAME/$app_name
        docker push $DOCKER_HUB_USERNAME/$app_name
      fi
      # tag branch name for all builds
      docker tag $DOCKER_HUB_USERNAME/$app_name:$BUILD_TAG $DOCKER_HUB_USERNAME/$app_name:$CURRENT_BRANCH
      echo pushing $DOCKER_HUB_USERNAME/$app_name:$CURRENT_BRANCH
      docker push $DOCKER_HUB_USERNAME/$app_name:$CURRENT_BRANCH
    done
  - docker images
 
